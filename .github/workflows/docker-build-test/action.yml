name: Build docker containers and run tests
inputs:
  aws-access-key-id:
    required: true
  aws-secret-access-key:
    required: true

runs:
  using: composite
  steps:
    - name: Pull base image
      uses: ./actions/docker/ecr
      id: login-ecr
      with:
        ecr-repository: centos-7.9-base
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        image-tag: latest
        action: pull

    - name: Build application container
      uses: ./actions/docker/build
      with:
        image-name: materials-designer
        dockerfile: ./dockerfiles/app/Dockerfile
        cli-args: --build-arg BASE_IMAGE=${{ steps.login-ecr.outputs.registry }}/centos-7.9-base


    - name: Build test container
      uses: ./actions/docker/build
      with:
        image-name: materials-designer-test
        dockerfile: ./dockerfiles/app/test/Dockerfile
        cli-args: --build-arg BASE_IMAGE=ghcr.io/exabyte-io/centos-7.9-node-8.11.4-chimp-xvfb-x11vnc-chrome_x86_64


    - name: Run tests
      shell: bash -l {0}
      run: |
        docker run -d -p 3001:3001 --name=materials-designer materials-designer:latest
        while ! docker logs materials-designer 2>&1 | grep "Compiled"; do
            failed=$(docker logs materials-designer 2>&1 | grep "Failed")
            if [[ "$failed" != "" ]]; then
                exit 1
            fi
            sleep 5
        done
        docker run --network=host materials-designer-test
